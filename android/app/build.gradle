def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withInputStream { stream ->
        localProperties.load(stream)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException('Flutter SDK not found. Define location with flutter.sdk in the local.properties file.')
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def loadSigningConfiguration(String name) {
    def propertiesFile = file("signing/${name}.properties")
    def properties = new Properties()
    properties.load(new FileInputStream(propertiesFile))
    return properties
}

def getKeystore(String fileName) {
    return file("signing/${fileName}")
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.2'

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId 'com.yourcompany.dartconf'
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName '1.0'
    }

    signingConfigs {
        debug {
            def debugKeystore = loadSigningConfiguration('debug')
            keyAlias debugKeystore['keyAlias']
            keyPassword debugKeystore['keyPassword']
            storeFile getKeystore(debugKeystore['storeFile'])
            storePassword debugKeystore['storePassword']
        }
        release {
            def debugKeystore = loadSigningConfiguration('release')
            keyAlias debugKeystore['keyAlias']
            keyPassword debugKeystore['keyPassword']
            storeFile getKeystore(debugKeystore['storeFile'])
            storePassword debugKeystore['storePassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

apply plugin: 'com.google.gms.google-services'
